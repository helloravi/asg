diff --git a/insertion.diff b/insertion.diff
deleted file mode 100644
index a99f00a..0000000
--- a/insertion.diff
+++ /dev/null
@@ -1,86 +0,0 @@
-commit 856b737a6852689a0a71741dc21fcc483942d71c
-Author: Ravikanth Andhavarapu <raviandkanth@gmail.com>
-Date:   Mon Dec 1 16:22:16 2014 +0530
-
-    Insertion sort assignment
-
-diff --git a/insertion.rb b/insertion.rb
-new file mode 100644
-index 0000000..f3f88c8
---- /dev/null
-+++ b/insertion.rb
-@@ -0,0 +1,74 @@
-+def insertion(a)
-+	n = a.length
-+	i = 1
-+
-+	while (i<=n-1)
-+		j = n-1
-+		# puts j
-+		while (j>0) 
-+			if a[j]<a[j-1]
-+				b=a[j]
-+				a[j] = a[j-1]
-+				a[j-1] = b
-+			end
-+			j=j-1
-+			# puts j
-+		end
-+		i = i+1
-+		# puts i
-+		puts a
-+		puts " "
-+	end
-+
-+	return a
-+				
-+end
-+a = [13,24,22,23,11]
-+# x = [6,5,4,3,1,2]
-+# puts insertion(a)
-+# puts " "
-+puts insertion(a)
-+
-+
-+# def splitarray(a)
-+# 	len = a.length
-+# 	n = len/2
-+# 	index1 = 0
-+# 	index2 = 0
-+# 	temp = []
-+# 	while (index1 <= n)
-+# 		while (index2 < len-1)
-+# 			if(!a[index2+1].nil?)
-+# 				temp.push([a[index2], a[index2+1]].minmax)
-+# 			else
-+# 				temp.push([a[index2]])
-+# 			end
-+# 			index2 += 2
-+# 		end
-+# 		index1 += 1
-+# 	end
-+# 	return temp
-+# end
-+
-+
-+# def mergesort(a)
-+# 	l = a.length
-+# 	if(l == 1)
-+# 		return a
-+# 	elsif(l == 2)
-+# 		return splitarray(a)
-+# 	else
-+# 		temp = splitarray(a)
-+# 		return mergearray(mergesort(temp[0]),mergesort(temp[1]))
-+# 	end
-+# end
-+
-+
-+
-+# a =[2,3,5,6,7,8]
-+# b = [3, 4, 5, 9]
-+
-+# puts mergearray(a,b)
-+# # puts splitarray(b)
-+
-+# mergesort(a)
diff --git a/mergesort.rb b/mergesort.rb
deleted file mode 100644
index 2ae34d8..0000000
--- a/mergesort.rb
+++ /dev/null
@@ -1,47 +0,0 @@
-def mergearray(a,b)
-	i = 0 #index of the first array
-	j = 0 #index of the second array
-	c=[]
-	p = a.length + b.length
-	while(c.length < p)
-		if (a[i].nil? && !b[j].nil? && c.length < p)
-			c.concat(b[j..-1])
-		end
-
-		if (b[j].nil? && !a[i].nil? && c.length < p)
-			c.concat(a[i..-1])
-		end
-
-		if(!a[i].nil? && !b[j].nil? && a[i] < b[j])
-			c.push(a[i])
-			i=i+1 
-		elsif(!a[i].nil? && !b[j].nil? && a[i] == b[j])
-			c.push(a[i])
-			c.push(b[j])
-			j=j+1
-			i=i+1
-		elsif(!a[i].nil? && !b[j].nil? && a[i] > b[j])
-			c.push(b[j])
-			j=j+1
-		end
-	end
-	
-	return c
-end
-
-def mergesort(a)
-	len = a.length
-	if len == 1
-		return a
-	elsif len%2==0
-		return mergearray(mergesort(a[0..len/2-1]), mergesort(a[len/2..len-1]))
-	else
-		return mergearray(mergesort(a[0..len/2]), mergesort(a[len/2+1..len-1]))
-
-	end
-end
-
-
-a = [23, 32, 1, 1, 1, 3, 7]
-b =[1, 1, 1, 3, 7]
-puts mergesort(a)
